#!/bin/bash

# MIT License
# 
# Copyright (c) 2020 Marek Bogusovsky
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

[ "X$(command -v acpi)" = "X" ] && echo "acpi not installed" && exit

source colors

TOTAL_BATTERY_POWER=0
BATTERY_INDEX=0
CHARGING=0
LABELS=""
while read -r battery; do
    BATTERY_INFO=$(echo ${battery} | grep -E "Battery [0-9]+")
    if [[ "X${BATTERY_INFO}" = "X" ]]; then
        echo "No batteries found on the system"
        exit 1
    fi
    BATTERY_STATE=$(echo "${BATTERY_INFO}" | grep -wo "Full\|Charging\|Discharging")
    BATTERY_POWER=$(echo "${BATTERY_INFO}" | grep -o '[0-9]\+%' | tr -d '%')
    BATTERY_REMAIN=$(echo "${BATTERY_INFO}" | grep -Eo '[0-9]+:[0-9]+')

    if [ "${BATTERY_STATE}" = "Charging" ]; then
        CHARGING=1
    fi

    TOTAL_BATTERY_POWER=$(( TOTAL_BATTERY_POWER + ${BATTERY_POWER}))


    LABEL_INDEX=$(( 4 * (${BATTERY_POWER} + 20) / 100 ))
    LABEL=${LABELS:${LABEL_INDEX}:1}

    if [ ${CHARGING} -eq 1 ]; then
        LABEL="${LABEL} "
    fi

    if [ $BATTERY_INDEX -gt 0 ]; then
        echo -n " + "
    fi

    COLOR=$(interpolateColor "#00ff00" "#ff0000" "${QUALITY}")
    echo -n "${LABEL} "
    colorizeBegin ${COLOR}
    echo -n "${BATTERY_POWER}%"

    if [[ "${BATTERY_REMAIN}" != "" ]]; then
        if [ "${BATTERY_STATE}" = "Charging" ]; then
            echo -n " (-${BATTERY_REMAIN})"
        else
            echo -n " (${BATTERY_REMAIN})"
        fi
    fi
    colorizeEnd -n
    BATTERY_INDEX=$(( BATTERY_INDEX + 1 ))
done <<< $(acpi -b)
echo

TOTAL_BATTERY_POWER=$(( TOTAL_BATTERY_POWER / ${BATTERY_INDEX} ))

if [ ${CHARGING} -eq 0 ]; then
    if [ "${TOTAL_BATTERY_POWER}" -le 5 ]; then
        rm -f .battery-notification-lock
        systemctl suspend
    elif [ "${TOTAL_BATTERY_POWER}" -le 10 ]; then
        rm -f .battery-notification-lock
        notify-send -a "Battery" -i /usr/share/icons/Adwaita/48x48/status/battery-level-0-charging-symbolic.symbolic.png -u critical " " "Battery level critically low!"
    elif [ "${TOTAL_BATTERY_POWER}" -le 20 ] && [ ! -f .battery-notification-lock ]; then
        touch .battery-notification-lock
        notify-send -a "Battery" -i /usr/share/icons/Adwaita/48x48/status/battery-level-0-charging-symbolic.symbolic.png -u normal " " "Low battery level!"
    fi
else
    rm -f .battery-notification-lock
fi
